(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var path = require('path');
    var fs = require('fs');
    var postCssImport = require('postcss-import');
    var postCssNext = require('postcss-cssnext');
    var postCssModules = require('postcss-modules');
    var umdWrapper = require('./umdWrapper');
    function createProcessors(dest, cwd, dist) {
        if (cwd === void 0) { cwd = ''; }
        return [
            postCssImport,
            postCssNext({
                features: {
                    autoprefixer: {
                        browsers: [
                            'last 2 versions',
                            'ie >= 11'
                        ]
                    }
                }
            }),
            postCssModules({
                generateScopedName: dist ? '[hash:base64:8]' : '[name]__[local]__[hash:base64:5]',
                getJSON: function (cssFileName, json) {
                    var outputPath = path.resolve(dest, path.relative(cwd, cssFileName));
                    var newFilePath = outputPath + '.js';
                    var themeKey = ' _key';
                    json[themeKey] = 'dojo-' + path.basename(outputPath, '.m.css');
                    fs.writeFileSync(newFilePath, umdWrapper(JSON.stringify(json)));
                }
            })
        ];
    }
    exports.createProcessors = createProcessors;
    ;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9zdGNzcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInBvc3Rjc3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7SUFBQSxJQUFNLElBQUksR0FBRyxPQUFPLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0IsSUFBTSxFQUFFLEdBQUcsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQ3pCLElBQU0sYUFBYSxHQUFHLE9BQU8sQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO0lBQ2hELElBQU0sV0FBVyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQy9DLElBQU0sY0FBYyxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsQ0FBQyxDQUFDO0lBQ2xELElBQU0sVUFBVSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQztJQUUzQywwQkFBaUMsSUFBWSxFQUFFLEdBQVEsRUFBRSxJQUFjO1FBQXhCLG9CQUFBLEVBQUEsUUFBUTtRQUN0RCxNQUFNLENBQUM7WUFDTixhQUFhO1lBQ2IsV0FBVyxDQUFDO2dCQUNYLFFBQVEsRUFBRTtvQkFDVCxZQUFZLEVBQUU7d0JBQ2IsUUFBUSxFQUFFOzRCQUNULGlCQUFpQjs0QkFDakIsVUFBVTt5QkFDVjtxQkFDRDtpQkFDRDthQUNELENBQUM7WUFDRixjQUFjLENBQUM7Z0JBQ2Qsa0JBQWtCLEVBQUUsSUFBSSxHQUFHLGlCQUFpQixHQUFHLGtDQUFrQztnQkFDakYsT0FBTyxFQUFFLFVBQVMsV0FBbUIsRUFBRSxJQUFTO29CQUMvQyxJQUFNLFVBQVUsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLEdBQUcsRUFBRSxXQUFXLENBQUMsQ0FBQyxDQUFDO29CQUN2RSxJQUFNLFdBQVcsR0FBRyxVQUFVLEdBQUcsS0FBSyxDQUFDO29CQUN2QyxJQUFNLFFBQVEsR0FBRyxPQUFPLENBQUM7b0JBQ3pCLElBQUksQ0FBQyxRQUFRLENBQUMsR0FBRyxPQUFPLEdBQUcsSUFBSSxDQUFDLFFBQVEsQ0FBQyxVQUFVLEVBQUUsUUFBUSxDQUFDLENBQUM7b0JBQy9ELEVBQUUsQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakUsQ0FBQzthQUNELENBQUM7U0FDRixDQUFDO0lBQ0gsQ0FBQztJQXhCRCw0Q0F3QkM7SUFBQSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKTtcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IHBvc3RDc3NJbXBvcnQgPSByZXF1aXJlKCdwb3N0Y3NzLWltcG9ydCcpO1xuY29uc3QgcG9zdENzc05leHQgPSByZXF1aXJlKCdwb3N0Y3NzLWNzc25leHQnKTtcbmNvbnN0IHBvc3RDc3NNb2R1bGVzID0gcmVxdWlyZSgncG9zdGNzcy1tb2R1bGVzJyk7XG5jb25zdCB1bWRXcmFwcGVyID0gcmVxdWlyZSgnLi91bWRXcmFwcGVyJyk7XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVQcm9jZXNzb3JzKGRlc3Q6IHN0cmluZywgY3dkID0gJycsIGRpc3Q/OiBib29sZWFuKSB7XG5cdHJldHVybiBbXG5cdFx0cG9zdENzc0ltcG9ydCxcblx0XHRwb3N0Q3NzTmV4dCh7XG5cdFx0XHRmZWF0dXJlczoge1xuXHRcdFx0XHRhdXRvcHJlZml4ZXI6IHtcblx0XHRcdFx0XHRicm93c2VyczogW1xuXHRcdFx0XHRcdFx0J2xhc3QgMiB2ZXJzaW9ucycsXG5cdFx0XHRcdFx0XHQnaWUgPj0gMTEnXG5cdFx0XHRcdFx0XVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSksXG5cdFx0cG9zdENzc01vZHVsZXMoe1xuXHRcdFx0Z2VuZXJhdGVTY29wZWROYW1lOiBkaXN0ID8gJ1toYXNoOmJhc2U2NDo4XScgOiAnW25hbWVdX19bbG9jYWxdX19baGFzaDpiYXNlNjQ6NV0nLFxuXHRcdFx0Z2V0SlNPTjogZnVuY3Rpb24oY3NzRmlsZU5hbWU6IHN0cmluZywganNvbjogYW55KSB7XG5cdFx0XHRcdGNvbnN0IG91dHB1dFBhdGggPSBwYXRoLnJlc29sdmUoZGVzdCwgcGF0aC5yZWxhdGl2ZShjd2QsIGNzc0ZpbGVOYW1lKSk7XG5cdFx0XHRcdGNvbnN0IG5ld0ZpbGVQYXRoID0gb3V0cHV0UGF0aCArICcuanMnO1xuXHRcdFx0XHRjb25zdCB0aGVtZUtleSA9ICcgX2tleSc7XG5cdFx0XHRcdGpzb25bdGhlbWVLZXldID0gJ2Rvam8tJyArIHBhdGguYmFzZW5hbWUob3V0cHV0UGF0aCwgJy5tLmNzcycpO1xuXHRcdFx0XHRmcy53cml0ZUZpbGVTeW5jKG5ld0ZpbGVQYXRoLCB1bWRXcmFwcGVyKEpTT04uc3RyaW5naWZ5KGpzb24pKSk7XG5cdFx0XHR9XG5cdFx0fSlcblx0XTtcbn07XG4iXX0=